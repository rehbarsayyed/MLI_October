[
{"JobId":"lkp_ibnr_ind","TargetTable":"ibnr","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, 'INDIVIDUAL' as ibnr_ind_grp, 'OVERALL' as ibnr_typ, cnt, ibnr_cnt, ibnr_amt from lkp_ibnr_ind","Order":"1","Pk": "", "Sk": "id","Target": "rds","Source": "lkp_ibnr_ind","ExecutionOrder":"1"},
{"JobId":"lkp_ibnr_grp","TargetTable":"ibnr","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, 'GROUP' as ibnr_ind_grp, 'OVERALL' as ibnr_typ, cnt, ibnr_cnt, ibnr_amt from lkp_ibnr_grp","Order":"1","Pk": "", "Sk": "id","Target": "rds","Source": "lkp_ibnr_grp","ExecutionOrder":"1"},

{"JobId":"lkp_ibnr_ind_prot","TargetTable":"ibnr","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, 'INDIVIDUAL' as ibnr_ind_grp, 'PROTECTION' as ibnr_typ, p_cnt as cnt, p_ibnr_cnt as ibnr_cnt, p_ibnr_amt as ibnr_amt from lkp_ibnr_ind_prot","Order":"1","Pk": "", "Sk": "id","Target": "rds","Source": "lkp_ibnr_ind_prot","ExecutionOrder":"1"},
{"JobId":"lkp_ibnr_ind_non_prot","TargetTable":"ibnr","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, 'INDIVIDUAL' as ibnr_ind_grp, 'NON-PROTECTION' as ibnr_typ, np_cnt as cnt, np_ibnr_cnt as ibnr_cnt, np_ibnr_amt as ibnr_amt from lkp_ibnr_ind_non_prot","Order":"1","Pk": "", "Sk": "id","Target": "rds","Source": "lkp_ibnr_ind_non_prot","ExecutionOrder":"1"},

{"JobId":"lkp_pln_cd_mppng_w","TargetTable":"lkp_pln_cd","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, trim(pln_id) as pln_id, trim(bnft_nm) as bnft_nm, trim(ppt_flg) as ppt_flg, upper(trim(prd_cd)) as prd_cd, trim(aro_pc) as aro_pc, upper(trim(typ)) as typ, upper(trim(typ2)) as typ2, CASE WHEN upper(trim(typ3)) ='NPAR SAVINGS' THEN 'NON PAR SAVINGS' WHEN upper(trim(typ3)) ='NPAR PROTECTION' THEN 'NON PAR PROTECTION' ELSE upper(trim(typ3)) END AS typ3, trim(min_age) as min_age, trim(max_age) as max_age, trim(max_trm) as max_trm, trim(min_trm) as min_trm, trim(min_ppt) as min_ppt, trim(max_ppt) as max_ppt, trim(max_mat_age) as max_mat_age, trim(min_prm) as min_prm, trim(max_prm) as max_prm, trim(min_sa) as min_sa, trim(map_to) as map_to, trim(db_opt) as db_opt, trim(cnt) as cnt, trim(re_cd) as re_cd, trim(fa_zero) as fa_zero, trim(uin_ind) as uin_ind, trim(no_uin_ind) as no_uin_ind, trim(dbo) as dbo, trim(val_mthd) as val_mthd, trim(rvvl_prd) as rvvl_prd, trim(pst_2013_ind) as pst_2013_ind, trim(rop_ind) as rop_ind, trim(pln_cd_mpping_id) as pln_cd_mpping_id from lkp_pln_cd_mppng_w","Order":"1","Pk": "", "Sk": "id","Target": "rds","Source": "lkp_pln_cd_mppng_w","ExecutionOrder":"1"},

{"JobId":"dim_ag_bkt","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_ag_bkt","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"6"},
{"JobId":"dim_channl","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_channl","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"8"},
{"JobId":"dim_channl_zn","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_channl_zn","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"1"},
{"JobId":"dim_chnnl_mrtlty","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_chnnl_mrtlty","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"9"},
{"JobId":"dim_occptn","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_occptn","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"23"},
{"JobId":"dim_cvd_indctr","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_cvd_indctr","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"4"},
{"JobId":"dim_dth_indctr","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_dth_indctr","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"10"},
{"JobId":"dim_gndr","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_gndr","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"11"},
{"JobId":"dim_incm_bckt","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_incm_bckt","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"12"},
{"JobId":"dim_iss_yr","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_iss_yr","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"3"},
{"JobId":"dim_lob","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_lob","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"2"},
{"JobId":"dim_med_nmed","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_med_nmed","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"13"},
{"JobId":"dim_mrtl_stts","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_mrtl_stts","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"14"},
{"JobId":"dim_ppt_bnd","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_ppt_bnd","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"15"},
{"JobId":"dim_prdct_typ_1","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_prdct_typ_1","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"16"},
{"JobId":"dim_prmm_bnd","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_prmm_bnd","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"17"},
{"JobId":"dim_prmm_md","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_prmm_md","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"18"},
{"JobId":"dim_sctr","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_sctr","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"19"},
{"JobId":"dim_sm_assrd_mltpl_rng","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_sm_assrd_mltpl_rng","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"20"},
{"JobId":"dim_sm_assrd_rng","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_sm_assrd_mltpl_rng","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"21"},
{"JobId":"plcy_cvg","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from plcy_cvg","Order":"1","Pk": "plcy_nmbr,cvrg_nmbr", "Sk": "id","Target": "rds","Source": "plcy_cvg","ExecutionOrder":"1"},
{"JobId":"lkp_pln_cd","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from lkp_pln_cd where mnth_id='202307'","Order":"1","Pk": "pln_id", "Sk": "pln_edl_id","Target": "rds","Source": "rds","ExecutionOrder":"23"},
{"JobId":"office_dtl","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from office_dtl","Order":"1","Pk": "agnt_cd", "Sk": "brnch_id","Target": "rds","Source": "std_office_dtl","ExecutionOrder":"1"},
{"JobId":"plcy_cstmr","TargetTable":"PLCY_CSTMR","Write":"N","BaseTable": "Y","View":"FinalView","Sql":"SELECT * from plcy_cstmr","Order":"1","Pk": "plcy_nmbr,cstmr_id,plcy_cstmr_rel_cd", "Sk": "plcy_cstmr_id","Target": "rds","Source": "plcy_cstmr","ExecutionOrder":"1"},
{"JobId":"cstmr_prsnl","Write": "N", "TargetTable":"cstmr_prsnl","BaseTable":"Y","View":"FinalView","Sql":"select  * from cstmr_prsnl","Order":"1","Pk": "cstmr_id", "Sk": "cstmr_prsnl_id","Target": "rds","Source": "cstmr_prsnl","ExecutionOrder":"1"},
{"JobId":"cstmr_cmmnctn","Write": "N", "TargetTable":"cstmr_cmmnctn","BaseTable":"Y","View":"FinalView","Sql":"select  * from cstmr_cmmnctn","Order":"1","Pk": "cstmr_nmbr","Sk": "cstmr_cmmnctn_id","Target": "rds","Source": "cstmr_cmmnctn","ExecutionOrder":"1"},
{"JobId":"dim_bns_optn","TargetTable":"","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from dim_bns_optn","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "rds","ExecutionOrder":"7"},


{"JobId":"ytd","TargetTable":"ytd_transformed","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from ytd","Order":"1","Pk": "policy_nmbr", "Sk": "id","Target": "rds","Source": "ytd","ExecutionOrder":"31"},

{"JobId":"plcy_ytd_fct_agency_w","TargetTable":"plcy_ytd_fct_agncy","Write":"Y","BaseTable":"N","View":"FinalView","Sql": "Select ytd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN ytd ON lower(trim(dim_channl.agncy_bgn)) = lower(trim(ytd.pgo)) UNION Select ytd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN ytd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(ytd.pgo)) AND substr(trim(lower(ytd.pgo)),1,4) = lower(trim(dim_channl.agncy_bgn)) UNION Select ytd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN ytd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(ytd.pgo)) AND substr(trim(lower(ytd.pgo)),1,4) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(ytd.pgo)),1,3) = lower(trim(dim_channl.agncy_bgn)) UNION Select ytd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN ytd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(ytd.pgo)) AND substr(trim(lower(ytd.pgo)),1,4) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(ytd.pgo)),1,3) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(ytd.pgo)),1,2) = lower(trim(dim_channl.agncy_bgn)) UNION Select ytd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN ytd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(ytd.pgo)) AND substr(trim(lower(ytd.pgo)),1,4) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(ytd.pgo)),1,3) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(ytd.pgo)),1,2) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(ytd.pgo)),1,1) = lower(trim(dim_channl.agncy_bgn))","Order":"1","Pk":"policy_number", "Sk": "id","Target": "rds","Source":"ytd","ExecutionOrder":"32"},

{"JobId":"ytd_agncy","TargetTable":"ytd_agncy","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from ytd_agncy","Order":"1","Pk": "policy_number", "Sk": "id","Target": "rds","Source": "ytd_agncy","ExecutionOrder":"33"},


{"JobId":"ytd_transformed","TargetTable":"plcy_ytd_fct_new","Write":"Y","BaseTable":"Y","View":"FinalView","Sql": "with ytd_transformed as ( select * from ytd_transformed) select I.policy_number as plcy_nmbr, AG_BKT.prmtr_id as ag_bckt_id, AG_BKT.prmtr_nm as ag_bckt, C.prmtr_id as channel_zone_id, C.prmtr_nm chnnl_zn_nm, C.prmtr_dscrptn as channel_zone_desc, D.prmtr_id as chnnl_mrtlty_fnl_nm, E.prmtr_id as covid_ind_id, E.prmtr_nm as cvd_indctr_flg, date_of_death as dth_dt, Z.prmtr_id as benf_life_assd_gender_id, Z.prmtr_nm as bnft_lf_assrd_gndr, G.prmtr_id as income_bucket_id, G.prmtr_nm as incm_bckt, G.prmtr_dscrptn as incm_bckt_dscrptn, H.prmtr_nm as iss_yr, J.prmtr_id as lob_id, K.prmtr_id as mednonmed_id, K.prmtr_nm as md_nmd_cd, L.prmtr_id as marital_status_id, L.prmtr_nm as mrtl_stts_dscrptn, M.prmtr_id as ppt_bnd, N.prmtr_id as product_type_1_id , N.prmtr_nm as prdct_typ1_dscrptn, O.prmtr_id as prmm_bnd, Q.prmtr_id as sector_id, CASE WHEN Q.prmtr_nm IS NULL THEN 'N/A' ELSE Q.prmtr_nm END as sctr_dscrptn, R.prmtr_id as sm_assrd_mltpl, S.prmtr_id as sm_assrd_bckt, plc_cvg.cvrg_smkr_cd as smkr_cd, PRODUCT_TYPE as prdct_typ_dscrptn, ANNUAL_TARGET_PREMIUM as annl_trgt_prmm, PGO as pgo_cd, SUM(CASE WHEN dur = 'DUR[0]' then A_Amount else 0.0 END) as dur_a0_amnt, SUM(CASE WHEN dur = 'DUR[1]' then A_Amount else 0.0 END) as dur_a1_amnt, SUM(CASE WHEN dur = 'DUR[2]' then A_Amount else 0.0 END) as dur_a2_amnt, SUM(CASE WHEN dur = 'DUR[3]' then A_Amount else 0.0 END) as dur_a3_amnt, SUM(CASE WHEN dur = 'DUR[4+]' then A_Amount else 0.0 END) as dur_a4_amnt, SUM(CASE WHEN dur = 'DUR[0]' then E_Amount else 0.0 END) as dur_e0_amnt, SUM(CASE WHEN dur = 'DUR[1]' then E_Amount else 0.0 END) as dur_e1_amnt, SUM(CASE WHEN dur = 'DUR[2]' then E_Amount else 0.0 END) as dur_e2_amnt, SUM(CASE WHEN dur = 'DUR[3]' then E_Amount else 0.0 END) as dur_e3_amnt, SUM(CASE WHEN dur = 'DUR[4+]' then E_Amount else 0.0 END) as dur_e4_amnt, SUM(CASE WHEN dur = 'DUR[0]' then A_Number else 0.0 END) as dur_a0_count, SUM(CASE WHEN dur = 'DUR[1]' then A_Number else 0.0 END) as dur_a1_cnt, SUM(CASE WHEN dur = 'DUR[2]' then A_Number else 0.0 END) as dur_a2_cnt, SUM(CASE WHEN dur = 'DUR[3]' then A_Number else 0.0 END) as dur_a3_cnt, SUM(CASE WHEN dur = 'DUR[4+]' then A_Number else 0.0 END) as dur_a4_cnt, SUM(CASE WHEN dur = 'DUR[0]' then E_Number else 0.0 END) as dur_e0_cnt, SUM(CASE WHEN dur = 'DUR[1]' then E_Number else 0.0 END) as dur_e1_cnt, SUM(CASE WHEN dur = 'DUR[2]' then E_Number else 0.0 END) as dur_e2_cnt, SUM(CASE WHEN dur = 'DUR[3]' then E_Number else 0.0 END) as dur_e3_cnt, SUM(CASE WHEN dur = 'DUR[4+]' then E_Number else 0.0 END) as dur_e4_cnt, sum(A_Amount) as a_amnt, cst_prsl.cstmr_assd_incm_dlphin as assssd_incm_amnt, Attained_Age as attnd_ag, benf_start_date as bnft_strt_dt, Channel_Mortality as chnnl_mrtlty_nm, CALC_DATE_1 as clctn_1_dt, CALC_DATE_2 as clctn_2_dt, DATE_OF_INTIMATION as intmtn_dt, completed_years as cmpltd_yrs, Death_Benefit_Amount_lq as dth_bnft_amnt, Death_Benefit_Amount_Rein as dth_bnft_amnt_rein, Death_Benefit_Paid_lq as dth_bnft_pd_amnt, Death_Benefit_Paid_Rein as dth_bnft_pd_rein_amnt, Death_Benefit_Type as dth_bnft_typ_cd, insrd_annual_income as insrd_annl_incm_amnt, insrd_marital_status as insrt_mrtl_stts_dscrptn, mednonmed as md_nmd_flg,  /*Mortality_Category*/ '' as mrtlty_ctgry_bckt, par_npar as pr_npr_cd, PLAN_ID as pln_id, POL_ISSUE_DATE as plcy_iss_dt, PROD_CODE as prdct_cd, SUM_AT_RISK as sm_at_rsk_amnt, /*TeleMER_Med*/ '' as tlmr_med_cd, F.prmtr_id as dth_ind_id, F.prmtr_nm as dth_indctr_cd,E_Amount ,E_Number ,DUR ,A_Number, A_amount, a_amount_lobwise, a_number_lobwise, ibnr_count_lobwise, ibnr_amount_lobwise, e_amount_ret, e_amount_rein, e_number_ret, e_number_rein, a_amount_ret, a_amount_rein, a_number_ret, a_number_rein, cvg_uw_cat, upper(trim(BB.bb_prmtr_dscrptn)) as bb_prmtr_dscrptn, upper(trim(BB.bb_prmt_id)) as bb_prmt_id, upper(trim(BB.bb_prmtr_nm)) as bb_prmtr_nm, upper(trim(BB.bb_channl_group)) as bb_channl_group, upper(trim(BB.agncy_bgn)) as bb_agncy_bgn, lkp_pln_cd.bnft_nm as plan_name, lkp_pln_cd.typ3 as lob_dscrptn, lkp_pln_cd.benefit_grp as benefit_group, cstmr_cmmnctn.state as state, cstmr_cmmnctn.pin_code as pin_code, cstmr_cmmnctn.district as district, office_dtl.brnch_frst_nm as branch_name, sa as sa_bands_1, sa_multiple as sa_bands, sa_retail as sa_rtl, sa_protection as sa_prtctn, ayfp_retail as ayfp_rtl, ayfp_protection as ayfp_prtctn, ayfp as afyp_bands, uw_lvl as uw_level, cst_prsl.cstmr_crdt_scr as cibil_scores, CASE WHEN cst_prsl.cstmr_crdt_scr is NULL THEN '10_NOT AVAILABLE' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<500 THEN '01_CIBIL<500' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<550 THEN '02_500<=CIBIL<550' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<600 THEN '03_550<=CIBIL<600' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<650 THEN '04_600<=CIBIL<650' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<700 THEN '05_650<=CIBIL<700' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<750 THEN '06_700<=CIBIL<750' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<800 THEN '07_750<=CIBIL<800' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<850 THEN '08_800<=CIBIL<850' ELSE '09_CIBIL>=850' END AS cibil_bucket ,P.prmtr_id as prmm_md_cd, OCCUPATION_CODE as occptn_cd, occptn.grp_nm as occptn_cd_grp, EDUCATION as edctn_cd from ytd_transformed I LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_ag_bkt where rcrd_stts_flg = 'A') AG_BKT ON upper(trim(AG_BKT.prmtr_nm)) = upper(trim(I.Age_Bucket)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm, prmtr_dscrptn from dim_channl_zn where rcrd_stts_flg = 'A') C ON upper(trim(C.prmtr_nm)) = upper(trim(I.Channel_Zone)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_chnnl_mrtlty where rcrd_stts_flg = 'A') D ON upper(trim(D.prmtr_nm)) = upper(trim(I.Channel_Mortality_Final)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm, grp_nm from dim_occptn where rcrd_stts_flg = 'A') occptn ON upper(trim(occptn.prmtr_nm)) = upper(trim(I.occupation_code)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_cvd_indctr where rcrd_stts_flg = 'A') E ON trim(E.prmtr_nm) = trim(I.COVID_IND) LEFT JOIN (Select distinct prmtr_id, cast (prmtr_nm as integer) from dim_dth_indctr where rcrd_stts_flg = 'A') F ON trim(F.prmtr_nm) = trim(I.DEATH_IND) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_gndr where rcrd_stts_flg = 'A') Z ON upper(trim(Z.prmtr_nm)) = upper(trim(I.BENF_LIFE_ASSD_GENDER)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm, prmtr_dscrptn from dim_incm_bckt where rcrd_stts_flg = 'A') G ON upper(trim(G.prmtr_nm)) = upper(trim(I.Income_Bucket)) LEFT JOIN (Select distinct prmtr_id, cast(prmtr_nm as integer) as prmtr_nm from dim_iss_yr where rcrd_stts_flg = 'A') H ON trim(H.prmtr_nm) = trim(I.Issue_Year) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_lob where rcrd_stts_flg = 'A') J ON upper(trim(J.prmtr_nm)) = upper(trim(I.LOB)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_med_nmed where rcrd_stts_flg = 'A') K ON upper(trim(K.prmtr_nm)) = upper(trim(I.MEDNONMED)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_mrtl_stts where rcrd_stts_flg = 'A') L ON upper(trim(L.prmtr_nm)) = upper(trim(I.MARITAL_STATUS)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_ppt_bnd where rcrd_stts_flg = 'A') M ON upper(trim(M.prmtr_nm)) = upper(trim(I.PPT_Band)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_prdct_typ_1 where rcrd_stts_flg = 'A') N ON upper(trim(N.prmtr_nm)) = upper(trim(I.PRODUCT_TYPE_1)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_prmm_bnd where rcrd_stts_flg = 'A') O ON upper(trim(O.prmtr_nm)) = upper(trim(I.Premium_Band)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_prmm_md where rcrd_stts_flg = 'A') P ON upper(trim(P.prmtr_nm)) = upper(trim(I.PREMIUM_MODE))  LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_sctr where rcrd_stts_flg = 'A') Q ON upper(trim(Q.prmtr_nm)) = upper(trim(I.SECTOR)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_sm_assrd_mltpl_rng where rcrd_stts_flg = 'A') R ON upper(trim(R.prmtr_nm)) = upper(trim(I.SA_Multiple)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_sm_assrd_rng where rcrd_stts_flg = 'A') S ON upper(trim(S.prmtr_nm)) = upper(trim(I.SA)) LEFT JOIN (Select distinct plcy_nmbr, max(cvrg_smkr_cd) as cvrg_smkr_cd from plcy_cvg group by plcy_nmbr) plc_cvg ON trim(plc_cvg.plcy_nmbr) = trim(I.policy_number) LEFT JOIN (select distinct pln_id, max(bnft_nm) as bnft_nm, max(benefit_grp) as benefit_grp, max(typ3) as typ3 from lkp_pln_cd group by pln_id) lkp_pln_cd on upper(trim(I.plan_id)) = upper(trim(lkp_pln_cd.pln_id)) LEFT JOIN (select distinct prnt_brnch_id, max(brnch_frst_nm) as brnch_frst_nm from office_dtl group by prnt_brnch_id) office_dtl on upper(trim(I.pgo)) = upper(trim(office_dtl.prnt_brnch_id)) LEFT JOIN (Select distinct plcy_nmbr, max(cstmr_id) as cstmr_id from plcy_cstmr as pc_1 where pc_1.plcy_cstmr_rel_cd = 'O' and PREV_UPDT_TS IN (SELECT max(PREV_UPDT_TS) from plcy_cstmr as pc_2 where trim(pc_1.plcy_nmbr) = (pc_2.plcy_nmbr) group by plcy_nmbr) group by plcy_nmbr) pl_cst ON trim(pl_cst.plcy_nmbr) = trim(I.policy_number) LEFT JOIN (Select distinct cstmr_nmbr as cstmr_id, max(trim(cstmr_crdt_scr)) as cstmr_crdt_scr, max(cstmr_assd_incm_dlphin) as cstmr_assd_incm_dlphin from cstmr_prsnl as cp_1 where src_prvs_updtd_tstmp IN (SELECT max(src_prvs_updtd_tstmp) from cstmr_prsnl as cp_2 where trim(cp_1.cstmr_nmbr) = trim(cp_2.cstmr_nmbr) group by cp_2.cstmr_nmbr) group by cstmr_nmbr) cst_prsl ON trim(cst_prsl.cstmr_id) = trim(pl_cst.cstmr_id) LEFT JOIN (select cstmr_nmbr, max(pin_code) as pin_code, max(state) as state, max(district) as district from cstmr_cmmnctn group by cstmr_nmbr)  cstmr_cmmnctn on  trim(cstmr_cmmnctn.cstmr_nmbr) = trim(pl_cst.cstmr_id) LEFT JOIN (Select distinct policy_number, bb_prmt_id, bb_prmtr_nm, bb_prmtr_dscrptn, bb_channl_group, agncy_bgn, sub_channl from ytd_agncy as ya_1 where bb_prmt_id IN (SELECT max(bb_prmt_id) from ytd_agncy ya_2 where ya_1.policy_number = ya_2.policy_number group by policy_number)) BB ON trim(BB.policy_number) = trim(I.policy_number) group by I.policy_number, ag_bckt_id, ag_bckt, channel_zone_id, chnnl_zn_nm, channel_zone_desc, chnnl_mrtlty_fnl_nm, covid_ind_id, cvd_indctr_flg, dth_dt, benf_life_assd_gender_id, bnft_lf_assrd_gndr, income_bucket_id, incm_bckt, incm_bckt_dscrptn, iss_yr, lob_id, lob_dscrptn, benefit_group, mednonmed_id, md_nmd_cd, marital_status_id, mrtl_stts_dscrptn, ppt_bnd, product_type_1_id, prdct_typ1_dscrptn, prmm_bnd, sector_id, sctr_dscrptn, sm_assrd_mltpl, sm_assrd_bckt, smkr_cd, prdct_typ_dscrptn, annl_trgt_prmm, pgo_cd, assssd_incm_amnt, attnd_ag, bnft_strt_dt, chnnl_mrtlty_nm, clctn_1_dt, clctn_2_dt, intmtn_dt, cmpltd_yrs, dth_bnft_amnt, dth_bnft_amnt_rein, dth_bnft_pd_amnt, dth_bnft_pd_rein_amnt, dth_bnft_typ_cd, insrd_annl_incm_amnt, insrt_mrtl_stts_dscrptn, md_nmd_flg, mrtlty_ctgry_bckt, pr_npr_cd, plan_id, plcy_iss_dt, prdct_cd, sm_at_rsk_amnt, tlmr_med_cd, dth_ind_id, dth_indctr_cd,E_Amount ,E_Number, DUR, A_Number,A_amount, a_amount_lobwise, a_number_lobwise, ibnr_count_lobwise, ibnr_amount_lobwise, e_amount_ret, e_amount_rein, e_number_ret, e_number_rein, a_amount_ret, a_amount_rein, a_number_ret, a_number_rein, cvg_uw_cat, bb_prmtr_dscrptn, bb_prmt_id, bb_prmtr_nm, bb_channl_group, bb_agncy_bgn, plan_name , state,pin_code,district, branch_name, sa_bands_1, sa_bands, sa_rtl, sa_prtctn, ayfp_rtl, ayfp_prtctn, afyp_bands, uw_level, cibil_scores, cibil_bucket, prmm_md_cd, occptn_cd_grp, occptn_cd,edctn_cd", "Order":"1","Pk":"plcy_nmbr", "Sk": "id","Target": "rds","Source":"ytd","ExecutionOrder":"34"},


{"JobId":"plcy_ytd_fct_new","TargetTable":"agg_ytd","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, 'CYTD' as ytd_cytd, trim(plcy_nmbr) as policy_nmbr, upper(trim(pln_id)) as plan_id, trim(iss_yr) as issue_year, trim(plcy_iss_dt) as issue_date, upper(trim(dur)) as durations, CASE WHEN ag_bckt is NULL THEN 'NA' WHEN upper(trim(ag_bckt)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ag_bckt)) END AS age_bucket, CASE WHEN bb_prmtr_nm is NULL THEN 'NA' WHEN upper(trim(bb_prmtr_nm)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bb_prmtr_nm)) END AS channel, CASE WHEN bb_prmtr_dscrptn is NULL THEN 'NA' WHEN upper(trim(bb_prmtr_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bb_prmtr_dscrptn)) END AS sub_channel, CASE WHEN bb_channl_group is NULL THEN 'NA' WHEN upper(trim(bb_channl_group)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bb_channl_group)) END AS channel_group, upper(trim(chnnl_zn_nm)) as channel_zone, chnnl_mrtlty_fnl_nm  as channel_mortality_final, CASE WHEN cvd_indctr_flg is NULL THEN 'NA' WHEN trim(cvd_indctr_flg) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE trim(cvd_indctr_flg) END AS covid_ind, CASE WHEN bnft_lf_assrd_gndr is NULL THEN 'NA' WHEN upper(trim(bnft_lf_assrd_gndr)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bnft_lf_assrd_gndr)) END AS benf_life_assd_gender, CASE WHEN incm_bckt is NULL THEN 'NA' WHEN upper(trim(incm_bckt)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(incm_bckt)) END AS income_bucket, CASE WHEN lob_dscrptn is NULL THEN 'NA' WHEN upper(trim(lob_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' WHEN upper(trim(lob_dscrptn)) ='UL' THEN 'ULIP' ELSE upper(trim(lob_dscrptn)) END AS lob, CASE WHEN plan_name is NULL THEN 'NA' WHEN upper(trim(plan_name)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(plan_name)) END AS benefit_name, CASE WHEN benefit_group is NULL THEN 'NA' WHEN upper(trim(benefit_group)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(benefit_group)) END AS benefit_name_grp, upper(trim(md_nmd_cd)) as mednonmed, CASE WHEN mrtl_stts_dscrptn is NULL THEN 'NA' WHEN upper(trim(mrtl_stts_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(mrtl_stts_dscrptn)) END AS marital_status, ppt_bnd  as ppt_band, upper(trim(prdct_typ1_dscrptn))  as product_type_1, prmm_bnd  as premium_band, prmm_md_cd  as premium_mode, CASE WHEN sctr_dscrptn is NULL THEN 'NA' WHEN upper(trim(sctr_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(sctr_dscrptn)) END AS sector, upper(trim(smkr_cd))  as smoker_code, upper(trim(prdct_typ_dscrptn)) as product_type, upper(trim(insrt_mrtl_stts_dscrptn))  as insrd_marital_status, CASE WHEN occptn_cd_grp is NULL THEN 'NA' WHEN upper(trim(occptn_cd_grp)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(occptn_cd_grp)) END AS occupation_code_grp, CASE WHEN edctn_cd is NULL THEN 'NA' WHEN upper(trim(edctn_cd)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(edctn_cd)) END AS education, upper(trim(pgo_cd)) as pgo, upper(trim(chnnl_mrtlty_nm)) as channel_mortality, upper(trim(dth_bnft_typ_cd)) as death_benefit_type, dth_indctr_cd  as death_ind, ''  as insrd_eductn_dtls, upper(trim(md_nmd_flg)) as med_nonmed, upper(trim(state))  as state, upper(trim(pin_code)) as pin_code, upper(trim(district)) as district, upper(trim(branch_name)) as branch, CASE WHEN sa_rtl is NULL THEN 'NA' WHEN upper(trim(sa_rtl)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(sa_rtl)) END AS sa_retail, CASE WHEN sa_prtctn is NULL THEN 'NA' WHEN upper(trim(sa_prtctn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(sa_prtctn)) END AS sa_protection, CASE WHEN ayfp_rtl is NULL THEN 'NA' WHEN upper(trim(ayfp_rtl)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ayfp_rtl)) END AS ayfp_retail, CASE WHEN ayfp_prtctn is NULL THEN 'NA' WHEN upper(trim(ayfp_prtctn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ayfp_prtctn)) END AS ayfp_protection, upper(trim(uw_level)) as uw_level, CASE WHEN cibil_bucket is NULL THEN 'NA' WHEN upper(trim(cibil_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(cibil_bucket)) END AS cibil_bucket, sum(e_amount) as e_amount, sum(e_number) as e_number, sum(a_number) as a_number, sum(a_amount) as a_amount, sum(a_amount_lobwise) as a_amount_lobwise, sum(a_number_lobwise) as a_number_lobwise, sum(e_amount_ret) as e_amount_ret, sum(e_amount_rein) as e_amount_rein, sum(e_number_ret) as e_number_ret, sum(e_number_rein) as e_number_rein, sum(a_amount_ret) as a_amount_ret, sum(a_amount_rein) as a_amount_rein, sum(a_number_ret) as a_number_ret, sum(a_number_rein) as a_number_rein, CASE WHEN cvg_uw_cat is NULL THEN 'NA' WHEN upper(trim(cvg_uw_cat)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(cvg_uw_cat)) END AS cvg_uw_cat from plcy_ytd_fct_new GROUP BY plcy_nmbr, pln_id, plcy_iss_dt, DUR, ag_bckt, bb_prmtr_nm, bb_channl_group, chnnl_zn_nm, chnnl_mrtlty_fnl_nm, cvd_indctr_flg ,plan_name, benefit_group, bnft_lf_assrd_gndr, incm_bckt, iss_yr, lob_dscrptn, md_nmd_cd, mrtl_stts_dscrptn ,ppt_bnd, prdct_typ1_dscrptn ,prmm_bnd ,prmm_md_cd, sctr_dscrptn ,smkr_cd ,prdct_typ_dscrptn, insrt_mrtl_stts_dscrptn, occptn_cd_grp, edctn_cd ,pgo_cd, chnnl_mrtlty_nm ,dth_bnft_typ_cd, dth_indctr_cd ,insrd_eductn_dtls, md_nmd_flg, state ,pin_code,district, cibil_bucket ,branch_name ,bb_prmtr_dscrptn, sa_rtl, sa_prtctn, ayfp_rtl, ayfp_prtctn, uw_level, cvg_uw_cat","Order":"1","Pk": "id", "Sk": "id","Target": "rds","Source": "STD_YTD_PLCY_FCT","ExecutionOrder":"35"},


{"JobId":"itd","TargetTable":"itd_transformed","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from itd","Order":"1","Pk": "policy_nmbr", "Sk": "id","Target": "rds","Source": "itd","ExecutionOrder":"36"},

{"JobId":"plcy_itd_fct_agency_w","TargetTable":"plcy_itd_fct_agncy","Write":"Y","BaseTable":"N","View":"FinalView","Sql": "Select itd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN itd ON lower(trim(dim_channl.agncy_bgn)) = lower(trim(itd.pgo)) UNION Select itd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN itd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(itd.pgo)) AND substr(trim(lower(itd.pgo)),1,4) = lower(trim(dim_channl.agncy_bgn)) UNION Select itd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN itd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(itd.pgo)) AND substr(trim(lower(itd.pgo)),1,4) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(itd.pgo)),1,3) = lower(trim(dim_channl.agncy_bgn)) UNION Select itd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN itd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(itd.pgo)) AND substr(trim(lower(itd.pgo)),1,4) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(itd.pgo)),1,3) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(itd.pgo)),1,2) = lower(trim(dim_channl.agncy_bgn)) UNION Select itd.policy_number, prmtr_id as bb_prmt_id, prmtr_nm as bb_prmtr_nm, prmtr_dscrptn as bb_prmtr_dscrptn, channl_group as bb_channl_group, agncy_bgn, sub_channl from dim_channl INNER JOIN itd ON lower(trim(dim_channl.agncy_bgn)) <> lower(trim(itd.pgo)) AND substr(trim(lower(itd.pgo)),1,4) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(itd.pgo)),1,3) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(itd.pgo)),1,2) <> lower(trim(dim_channl.agncy_bgn)) AND substr(trim(lower(itd.pgo)),1,1) = lower(trim(dim_channl.agncy_bgn))","Order":"1","Pk":"policy_number", "Sk": "id","Target": "rds","Source":"itd","ExecutionOrder":"37"},

{"JobId":"itd_agncy","TargetTable":"itd_agncy","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"Select * from itd_agncy","Order":"1","Pk": "policy_number", "Sk": "id","Target": "rds","Source": "itd_agncy","ExecutionOrder":"38"},

{"JobId":"itd_transformed","TargetTable":"plcy_itd_fct_new","Write":"Y","BaseTable":"Y","View":"FinalView","Sql": "with itd_transformed as ( select * from itd) select distinct I.POLICY_NUMBER as plcy_nmbr, AG_BKT.prmtr_id as ag_bckt_id, AG_BKT.prmtr_nm as ag_bckt,  A.prmtr_id as bns_optn_dscrptn, trim(C.prmtr_id) as channel_zone_id, C.prmtr_nm as chnnl_zn_nm, C.prmtr_dscrptn as channel_zone_desc,  D.prmtr_id  as chnnl_mrtlty_fnl_nm,  E.prmtr_id as covid_ind_id, E.prmtr_nm as cvd_indctr_flg,  DATE_OF_DEATH as dth_dt, Z.prmtr_id as benf_life_assd_gender_id, Z.prmtr_nm as bnft_lf_assrd_gndr,  G.prmtr_id as income_bucket_id, G.prmtr_nm as incm_bckt, G.prmtr_dscrptn as incm_bckt_dscrptn,  H.prmtr_nm as iss_yr,  J.prmtr_id as lob_id, K.prmtr_id as mednonmed_id, K.prmtr_nm as md_nmd_cd,  L.prmtr_id as marital_status_id, L.prmtr_nm as mrtl_stts_dscrptn,  M.prmtr_id as ppt_bnd,  N.prmtr_id as product_type_1_id , N.prmtr_nm as prdct_typ1_dscrptn, O.prmtr_id as  prmm_bnd,  P.prmtr_id as prmm_md_cd,  Q.prmtr_id as sector_id, CASE WHEN Q.prmtr_nm IS NULL THEN 'N/A' ELSE Q.prmtr_nm END as sctr_dscrptn,  R.prmtr_id as sm_assrd_mltpl,  S.prmtr_id as sm_assrd_bckt,  plc_cvg.cvrg_smkr_cd as smkr_cd,  PRODUCT_TYPE as prdct_typ_dscrptn,  INSRD_MARITAL_STATUS as insrt_mrtl_stts_dscrptn,  OCCUPATION_CODE as occptn_cd, occptn.grp_nm as occptn_cd_grp, BENEFIT_FACE_AMOUNT as bnfct_fc_amnt,  ANNUAL_TARGET_PREMIUM as annl_trgt_prmm,  BENF_START_DATE as bnft_strt_dt,  BENF_EXPIRY_DATE as bnfct_expry_dt,  BENF_LIFE_ASSD_DOB as bnft_lf_assrd_brth_dt,  EDUCATION as edctn_cd,  PGO as pgo_cd,  SUM(CASE WHEN dur = 'DUR[0]' then A_Amount else 0.0 END) as dur_a0_amnt,  SUM(CASE WHEN dur = 'DUR[1]' then A_Amount else 0.0 END) as dur_a1_amnt,  SUM(CASE WHEN dur = 'DUR[2]' then A_Amount else 0.0 END) as dur_a2_amnt,  SUM(CASE WHEN dur = 'DUR[3]' then A_Amount else 0.0 END) as dur_a3_amnt,  SUM(CASE WHEN dur = 'DUR[4+]' then A_Amount else 0.0 END) as dur_a4_amnt,  SUM(CASE WHEN dur = 'DUR[0]' then E_Amount else 0.0 END) as dur_e0_amnt,  SUM(CASE WHEN dur = 'DUR[1]' then E_Amount else 0.0 END) as dur_e1_amnt,  SUM(CASE WHEN dur = 'DUR[2]' then E_Amount else 0.0 END) as dur_e2_amnt,  SUM(CASE WHEN dur = 'DUR[3]' then E_Amount else 0.0 END) as dur_e3_amnt,  SUM(CASE WHEN dur = 'DUR[4+]' then E_Amount else 0.0 END) as dur_e4_amnt,  SUM(CASE WHEN dur = 'DUR[0]' then A_Number else 0.0 END) as dur_a0_count,  SUM(CASE WHEN dur = 'DUR[1]' then A_Number else 0.0 END) as dur_a1_cnt,  SUM(CASE WHEN dur = 'DUR[2]' then A_Number else 0.0 END) as dur_a2_cnt,  SUM(CASE WHEN dur = 'DUR[3]' then A_Number else 0.0 END) as dur_a3_cnt,  SUM(CASE WHEN dur = 'DUR[4+]' then A_Number else 0.0 END) as dur_a4_cnt,  SUM(CASE WHEN dur = 'DUR[0]' then E_Number else 0.0 END) as dur_e0_cnt,  SUM(CASE WHEN dur = 'DUR[1]' then E_Number else 0.0 END) as dur_e1_cnt,  SUM(CASE WHEN dur = 'DUR[2]' then E_Number else 0.0 END) as dur_e2_cnt,  SUM(CASE WHEN dur = 'DUR[3]' then E_Number else 0.0 END) as dur_e3_cnt,  SUM(CASE WHEN dur = 'DUR[4+]' then E_Number else 0.0 END) as dur_e4_cnt,  sum(A_Amount) as a_amnt,  cst_prsl.cstmr_assd_incm_dlphin as assssd_incm_amnt,  CALC_DATE_1 as clctn_1_dt,  CALC_DATE_2 as clctn_2_dt,  CATEGORY as ctgry_dscrptn,  Category_Death as ctgry_dth,   Channel_Mortality as chnnl_mrtlty_nm,  DATE_OF_INTIMATION as intmtn_dt,  Death_Benefit_Amount as dth_bnft_amnt,  Death_Benefit_Amount_Rein as dth_bnft_amnt_rein,  Death_Benefit_Paid as dth_bnft_pd_amnt,  Death_Benefit_Paid_Rein as dth_bnft_pd_rein_amnt,  /*Death_Benefit_Type*/ '' as dth_bnft_typ_cd,  F.prmtr_id as dth_ind_id, F.prmtr_nm as dth_indctr_cd,  Income as incm_amnt,  insrd_annual_income as insrd_annl_incm_amnt,  INSRD_EDUCTN_DTLS as insrd_edct_dtls_cd,  LOB_1 as lob_1_dscrptn,  Med_nonMed as md_nmd_flg,  New_Channel as nw_chnnl_dscrptn,  PAR_NPAR as pr_npr_cd,  PLAN_ID as pln_id,  POL_ISSUE_DATE as plcy_iss_dt,  ORIG_BEN_XPRY_DT as orgnl_bnft_expry_dt,  SUM_AT_RISK as sm_at_rsk_amnt,  PROD_CODE as prdct_cd,  Attained_Age as attnd_ag,  /*Declared_Income*/ ''  as dclrd_incm_amnt,  /*TeleMER_Med*/ '' as tlmr_med_cd,  /*Mortality_Category*/ '' as mrtlty_ctgry_bckt,  e_amount , e_number , dur , a_number , a_amount, a_amount_lobwise, a_number_lobwise, ibnr_count_lobwise, ibnr_amount_lobwise, e_amount_ret, e_amount_rein, e_number_ret, e_number_rein, a_amount_ret, a_amount_rein, a_number_ret, a_number_rein, cvg_uw_cat, upper(trim(BB.bb_prmtr_dscrptn)) as bb_prmtr_dscrptn, upper(trim(BB.bb_prmt_id)) as bb_prmt_id, upper(trim(BB.bb_prmtr_nm)) as bb_prmtr_nm, upper(trim(BB.bb_channl_group)) as bb_channl_group, upper(trim(BB.agncy_bgn)) as bb_agncy_bgn, lkp_pln_cd.bnft_nm as plan_name, lkp_pln_cd.typ3 as lob_dscrptn, lkp_pln_cd.benefit_grp as benefit_group, cstmr_cmmnctn.state as state, cstmr_cmmnctn.pin_code as pin_code, cstmr_cmmnctn.district as district, office_dtl.brnch_frst_nm as branch_name, sa as sa_bands_1, sa_multiple as sa_bands, sa_retail as sa_rtl, sa_protection as sa_prtctn, ayfp_retail as ayfp_rtl, ayfp_protection as ayfp_prtctn, ayfp as afyp_bands, uw_lvl as uw_level, cst_prsl.cstmr_crdt_scr as cibil_scores, CASE WHEN cst_prsl.cstmr_crdt_scr is NULL THEN '10_NOT AVAILABLE' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<500 THEN '01_CIBIL<500' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<550 THEN '02_500<=CIBIL<550' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<600 THEN '03_550<=CIBIL<600' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<650 THEN '04_600<=CIBIL<650' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<700 THEN '05_650<=CIBIL<700' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<750 THEN '06_700<=CIBIL<750' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<800 THEN '07_750<=CIBIL<800' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<850 THEN '08_800<=CIBIL<850' ELSE '09_CIBIL>=850' END AS cibil_bucket from itd_transformed I LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_ag_bkt where rcrd_stts_flg = 'A') AG_BKT ON upper(trim(AG_BKT.prmtr_nm)) = upper(trim(I.Age_Bucket)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm, prmtr_dscrptn from dim_channl_zn where rcrd_stts_flg = 'A') C ON upper(trim(C.prmtr_nm)) = upper(trim(I.Channel_Zone)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_chnnl_mrtlty where rcrd_stts_flg = 'A') D ON upper(trim(D.prmtr_nm)) = upper(trim(I.Channel_Mortality_Final)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm, grp_nm from dim_occptn where rcrd_stts_flg = 'A') occptn ON upper(trim(occptn.prmtr_nm)) = upper(trim(I.occupation_code)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_cvd_indctr where rcrd_stts_flg = 'A') E ON trim(E.prmtr_nm) = trim(I.COVID_IND) LEFT JOIN (Select distinct prmtr_id, cast (prmtr_nm as integer) from dim_dth_indctr where rcrd_stts_flg = 'A') F ON trim(F.prmtr_nm) = trim(I.DEATH_IND) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_gndr where rcrd_stts_flg = 'A') Z ON upper(trim(Z.prmtr_nm)) = upper(trim(I.BENF_LIFE_ASSD_GENDER)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm, prmtr_dscrptn from dim_incm_bckt where rcrd_stts_flg = 'A') G ON upper(trim(G.prmtr_nm)) = upper(trim(I.Income_Bucket)) LEFT JOIN (Select distinct prmtr_id, cast(prmtr_nm as integer) as prmtr_nm from dim_iss_yr where rcrd_stts_flg = 'A') H ON trim(H.prmtr_nm) = trim(I.Issue_Year) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_lob where rcrd_stts_flg = 'A') J ON upper(trim(J.prmtr_nm)) = upper(trim(I.LOB)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_med_nmed where rcrd_stts_flg = 'A') K ON upper(trim(K.prmtr_nm)) = upper(trim(I.MEDNONMED)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_mrtl_stts where rcrd_stts_flg = 'A') L ON upper(trim(L.prmtr_nm)) = upper(trim(I.MARITAL_STATUS)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_ppt_bnd where rcrd_stts_flg = 'A') M ON upper(trim(M.prmtr_nm)) = upper(trim(I.PPT_Band)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_prdct_typ_1 where rcrd_stts_flg = 'A') N ON upper(trim(N.prmtr_nm)) = upper(trim(I.PRODUCT_TYPE_1)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_prmm_bnd where rcrd_stts_flg = 'A') O ON upper(trim(O.prmtr_nm)) = upper(trim(I.Premium_Band)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_prmm_md where rcrd_stts_flg = 'A') P ON upper(trim(P.prmtr_nm)) = upper(trim(I.PREMIUM_MODE))  LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_sctr where rcrd_stts_flg = 'A') Q ON upper(trim(Q.prmtr_nm)) = upper(trim(I.SECTOR)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_sm_assrd_mltpl_rng where rcrd_stts_flg = 'A') R ON upper(trim(R.prmtr_nm)) = upper(trim(I.SA_Multiple)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_sm_assrd_rng where rcrd_stts_flg = 'A') S ON upper(trim(S.prmtr_nm)) = upper(trim(I.SA)) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_bns_optn where rcrd_stts_flg = 'A') A ON upper(trim(A.prmtr_nm)) = upper(trim(I.BONUS_OPTION)) LEFT JOIN (Select distinct plcy_nmbr, max(cvrg_smkr_cd) as cvrg_smkr_cd from plcy_cvg group by plcy_nmbr) plc_cvg ON trim(plc_cvg.plcy_nmbr) = trim(I.policy_number) LEFT JOIN (select distinct pln_id, max(bnft_nm) as bnft_nm, max(benefit_grp) as benefit_grp, max(typ3) as typ3 from lkp_pln_cd group by pln_id) lkp_pln_cd on upper(trim(I.plan_id)) = upper(trim(lkp_pln_cd.pln_id)) LEFT JOIN (select distinct prnt_brnch_id, max(brnch_frst_nm) as brnch_frst_nm from office_dtl group by prnt_brnch_id) office_dtl on upper(trim(I.pgo)) = upper(trim(office_dtl.prnt_brnch_id)) LEFT JOIN (Select distinct plcy_nmbr, max(cstmr_id) as cstmr_id from plcy_cstmr as pc_1 where pc_1.plcy_cstmr_rel_cd = 'O' and PREV_UPDT_TS IN (SELECT max(PREV_UPDT_TS) from plcy_cstmr as pc_2 where trim(pc_1.plcy_nmbr) = (pc_2.plcy_nmbr) group by plcy_nmbr) group by plcy_nmbr) pl_cst ON trim(pl_cst.plcy_nmbr) = trim(I.policy_number) LEFT JOIN (Select distinct cstmr_nmbr as cstmr_id, max(trim(cstmr_crdt_scr)) as cstmr_crdt_scr, max(cstmr_assd_incm_dlphin) as cstmr_assd_incm_dlphin from cstmr_prsnl as cp_1 where src_prvs_updtd_tstmp IN (SELECT max(src_prvs_updtd_tstmp) from cstmr_prsnl as cp_2 where trim(cp_1.cstmr_nmbr) = trim(cp_2.cstmr_nmbr) group by cp_2.cstmr_nmbr) group by cstmr_nmbr) cst_prsl ON trim(cst_prsl.cstmr_id) = trim(pl_cst.cstmr_id) LEFT JOIN (select cstmr_nmbr, max(pin_code) as pin_code, max(state) as state, max(district) as district from cstmr_cmmnctn group by cstmr_nmbr)  cstmr_cmmnctn on  trim(cstmr_cmmnctn.cstmr_nmbr) = trim(pl_cst.cstmr_id) LEFT JOIN (Select distinct policy_number, bb_prmt_id, bb_prmtr_nm, bb_prmtr_dscrptn, bb_channl_group, agncy_bgn, sub_channl from ytd_agncy as ya_1 where bb_prmt_id IN (SELECT max(bb_prmt_id) from ytd_agncy ya_2 where ya_1.policy_number = ya_2.policy_number group by policy_number)) BB ON trim(BB.policy_number) = trim(I.policy_number) group by I.policy_number, AG_BKT.prmtr_id, AG_BKT.prmtr_nm, C.prmtr_id, C.prmtr_nm, C.prmtr_dscrptn, D.prmtr_id, E.prmtr_id, E.prmtr_nm, DATE_OF_DEATH, Z.prmtr_id, Z.prmtr_nm, G.prmtr_id, G.prmtr_nm, G.prmtr_dscrptn, H.prmtr_nm, J.prmtr_id, K.prmtr_id, K.prmtr_nm,  L.prmtr_id, L.prmtr_nm, M.prmtr_id, N.prmtr_id, N.prmtr_nm,  O.prmtr_id, P.prmtr_id, Q.prmtr_id, Q.prmtr_nm, R.prmtr_id, S.prmtr_id, plc_cvg.cvrg_smkr_cd, PRODUCT_TYPE, INSRD_MARITAL_STATUS, OCCUPATION_CODE, occptn.grp_nm, BENEFIT_FACE_AMOUNT,  ANNUAL_TARGET_PREMIUM, BENF_START_DATE, BENF_EXPIRY_DATE, BENF_LIFE_ASSD_DOB, EDUCATION, PGO, a_amount, cst_prsl.cstmr_assd_incm_dlphin, CALC_DATE_1, CALC_DATE_2, CATEGORY, Category_Death, Channel_Mortality, DATE_OF_INTIMATION, Death_Benefit_Amount, Death_Benefit_Amount_Rein, Death_Benefit_Paid, Death_Benefit_Paid_Rein, F.prmtr_id, F.prmtr_nm, Income,  insrd_annual_income, INSRD_EDUCTN_DTLS, LOB_1, Med_nonMed, New_Channel, PAR_NPAR, PLAN_ID, POL_ISSUE_DATE, ORIG_BEN_XPRY_DT, SUM_AT_RISK, PROD_CODE, Attained_Age, e_amount , e_number , dur , a_number , a_amount, a_amount_lobwise, a_number_lobwise, ibnr_count_lobwise, e_amount_ret, e_amount_rein, e_number_ret, e_number_rein, a_amount_ret, a_amount_rein, a_number_ret, a_number_rein, cvg_uw_cat, ibnr_amount_lobwise, BB.bb_prmtr_dscrptn, BB.bb_prmt_id, BB.bb_prmtr_nm, BB.bb_channl_group, BB.agncy_bgn, lkp_pln_cd.bnft_nm, lkp_pln_cd.typ3, lkp_pln_cd.benefit_grp, cstmr_cmmnctn.state, cstmr_cmmnctn.pin_code, cstmr_cmmnctn.district, office_dtl.brnch_frst_nm, sa, sa_multiple, sa_retail, sa_protection, ayfp_retail, ayfp_protection, ayfp, uw_lvl, cst_prsl.cstmr_crdt_scr, A.prmtr_id","Order":"1","Pk":"plcy_nmbr", "Sk": "id","Target": "rds","Source":"itd","ExecutionOrder":"39"},


{"JobId":"plcy_itd_fct_new","TargetTable":"agg_itd","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select distinct '202307' as mnth_id, trim(plcy_nmbr) as policy_nmbr, upper(trim(pln_id)) as plan_id, trim(iss_yr) as issue_year, trim(plcy_iss_dt) as issue_date, upper(trim(dur)) as durations, CASE WHEN ag_bckt is NULL THEN 'NA' WHEN upper(trim(ag_bckt)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ag_bckt)) END AS age_bucket, CASE WHEN bb_prmtr_nm is NULL THEN 'NA' WHEN upper(trim(bb_prmtr_nm)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bb_prmtr_nm)) END AS channel, CASE WHEN bb_prmtr_dscrptn is NULL THEN 'NA' WHEN upper(trim(bb_prmtr_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bb_prmtr_dscrptn)) END AS sub_channel, CASE WHEN bb_channl_group is NULL THEN 'NA' WHEN upper(trim(bb_channl_group)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bb_channl_group)) END AS channel_group, upper(trim(chnnl_zn_nm))  as channel_zone, chnnl_mrtlty_fnl_nm  as channel_mortality_final, CASE WHEN cvd_indctr_flg is NULL THEN 'NA' WHEN upper(trim(cvd_indctr_flg)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(cvd_indctr_flg)) END AS covid_ind, CASE WHEN bnft_lf_assrd_gndr is NULL THEN 'NA' WHEN upper(trim(bnft_lf_assrd_gndr)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(bnft_lf_assrd_gndr)) END AS benf_life_assd_gender, CASE WHEN incm_bckt is NULL THEN '01_0' WHEN upper(trim(incm_bckt)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(incm_bckt)) END AS income_bucket, CASE WHEN lob_dscrptn is NULL THEN 'NA' WHEN upper(trim(lob_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' WHEN upper(trim(lob_dscrptn)) ='UL' THEN 'ULIP' ELSE upper(trim(lob_dscrptn)) END AS lob, CASE WHEN plan_name is NULL THEN 'NA' WHEN upper(trim(plan_name)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(plan_name)) END AS benefit_name, CASE WHEN benefit_group is NULL THEN 'NA' WHEN upper(trim(benefit_group)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(benefit_group)) END AS benefit_name_grp, upper(trim(md_nmd_cd)) as mednonmed, CASE WHEN mrtl_stts_dscrptn is NULL THEN 'NA' WHEN upper(trim(mrtl_stts_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(mrtl_stts_dscrptn)) END AS marital_status, ppt_bnd  as ppt_band, upper(trim(prdct_typ1_dscrptn))  as product_type_1, prmm_bnd  as premium_band, prmm_md_cd  as premium_mode, CASE WHEN sctr_dscrptn is NULL THEN 'NA' WHEN upper(trim(sctr_dscrptn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(sctr_dscrptn)) END AS sector, CASE WHEN smkr_cd is NULL THEN 'NA' WHEN upper(trim(smkr_cd)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(smkr_cd)) END AS smoker_code, upper(trim(prdct_typ_dscrptn))  as product_type, upper(trim(insrt_mrtl_stts_dscrptn)) as insrd_marital_status, CASE WHEN occptn_cd_grp is NULL THEN 'NA' WHEN upper(trim(occptn_cd_grp)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(occptn_cd_grp)) END AS occupation_code_grp, CASE WHEN edctn_cd is NULL THEN 'NA' WHEN upper(trim(edctn_cd)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(edctn_cd)) END AS education, upper(trim(pgo_cd))  as pgo, upper(trim(chnnl_mrtlty_nm)) as channel_mortality, upper(trim(dth_bnft_typ_cd)) as death_benefit_type, dth_indctr_cd  as death_ind, upper(trim(insrd_edct_dtls_cd)) as insrd_eductn_dtls, upper(trim(md_nmd_flg)) as med_nonmed, upper(trim(state)) as state, upper(trim(pin_code)) as pin_code, upper(trim(district))  as district, upper(trim(branch_name)) as branch, CASE WHEN sa_rtl is NULL THEN 'NA' WHEN upper(trim(sa_rtl)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(sa_rtl)) END AS sa_retail, CASE WHEN sa_prtctn is NULL THEN 'NA' WHEN upper(trim(sa_prtctn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(sa_prtctn)) END AS sa_protection, CASE WHEN ayfp_rtl is NULL THEN 'NA' WHEN upper(trim(ayfp_rtl)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ayfp_rtl)) END AS ayfp_retail, CASE WHEN ayfp_prtctn is NULL THEN 'NA' WHEN upper(trim(ayfp_prtctn)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ayfp_prtctn)) END AS ayfp_protection, upper(trim(uw_level)) as uw_level, CASE WHEN cibil_bucket is NULL THEN 'NA' WHEN upper(trim(cibil_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(cibil_bucket)) END AS cibil_bucket, sum(e_amount)  as e_amount, sum(e_number)  as e_number, sum(a_number)  as a_number, sum(a_amount) as a_amount, sum(a_amount_lobwise) as a_amount_lobwise, sum(a_number_lobwise) as a_number_lobwise, sum(e_amount_ret) as e_amount_ret, sum(e_amount_rein) as e_amount_rein, sum(e_number_ret) as e_number_ret, sum(e_number_rein) as e_number_rein, sum(a_amount_ret) as a_amount_ret, sum(a_amount_rein) as a_amount_rein, sum(a_number_ret) as a_number_ret, sum(a_number_rein) as a_number_rein, CASE WHEN cvg_uw_cat is NULL THEN 'NA' WHEN upper(trim(cvg_uw_cat)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(cvg_uw_cat)) END AS cvg_uw_cat from plcy_itd_fct_new GROUP BY plcy_nmbr, pln_id, plcy_iss_dt, DUR, ag_bckt, bb_prmtr_nm ,chnnl_zn_nm, bb_channl_group, chnnl_mrtlty_fnl_nm, cvd_indctr_flg ,plan_name, benefit_group, bnft_lf_assrd_gndr, incm_bckt, iss_yr, lob_dscrptn, md_nmd_cd, mrtl_stts_dscrptn ,ppt_bnd, prdct_typ1_dscrptn ,prmm_bnd ,prmm_md_cd, sctr_dscrptn ,smkr_cd ,prdct_typ_dscrptn ,insrt_mrtl_stts_dscrptn, occptn_cd_grp, edctn_cd ,pgo_cd, chnnl_mrtlty_nm ,dth_bnft_typ_cd, dth_indctr_cd ,insrd_edct_dtls_cd, md_nmd_flg, state ,pin_code,district, cibil_bucket ,branch_name ,bb_prmtr_dscrptn, sa_rtl, sa_prtctn, ayfp_rtl, ayfp_prtctn, uw_level, cvg_uw_cat","Order":"1","Pk": "id", "Sk": "id","Target": "rds","Source": "STD_ITD_PLCY_FCT","ExecutionOrder":"40"},




{"JobId":"plcy_itd_fct_new_r","TargetTable":"plcy_itd_fct_new_r","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"select * from plcy_itd_fct_new_r","Order":"1","Pk": "id", "Sk": "id","Target": "rds","Source": "STD_ITD_PLCY_FCT","ExecutionOrder":"41"},

{"JobId":"policy_level_transformed","TargetTable":"plcy_cdr_fct","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"SELECT '202307' as mnth_id, policy_number as policy_no, death_amount_gross_sum as dth_amnt_grs_sm, death_amount_net_sum as dth_amnt_nt_sm, death_count_gross_sum as dth_cnt_grs_sm, death_count_net_sum as dth_cnt_nt_sm, exposed_to_amount_sum as expsd_to_amnt_sm, exposed_risk_count_sum as expsd_rsk_cnt_sm, issued_count_avg as issd_cnt_avg, a_itd.plan_id, a_itd.issue_year as issue_year, a_itd.issue_date as issue_date, a_itd.durations as durations, CASE WHEN a_itd.age_bucket is NULL THEN 'NA' WHEN upper(trim(a_itd.age_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.age_bucket)) END AS age_bucket, CASE WHEN a_itd.channel is NULL THEN 'NA' WHEN upper(trim(a_itd.channel)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.channel)) END AS channel, CASE WHEN a_itd.sub_channel is NULL THEN 'NA' WHEN upper(trim(a_itd.sub_channel)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sub_channel)) END AS sub_channel, CASE WHEN a_itd.channel_group is NULL THEN 'NA' WHEN upper(trim(a_itd.channel_group)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.channel_group)) END AS channel_group, a_itd.channel_zone as channel_zone, a_itd.channel_mortality_final as channel_mortality_final, CASE WHEN a_itd.covid_ind is NULL THEN 'NA' WHEN upper(trim(a_itd.covid_ind)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.covid_ind)) END AS covid_ind, CASE WHEN a_itd.benf_life_assd_gender is NULL THEN 'NA' WHEN upper(trim(a_itd.benf_life_assd_gender)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.benf_life_assd_gender)) END AS benf_life_assd_gender, CASE WHEN a_itd.income_bucket is NULL THEN 'NA' WHEN upper(trim(a_itd.income_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '', 'NOT FOUND') THEN 'NA' ELSE upper(trim(a_itd.income_bucket)) END AS income_bucket, CASE WHEN a_itd.lob is NULL THEN 'NA' WHEN upper(trim(a_itd.lob)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' WHEN upper(trim(a_itd.lob)) ='UL' THEN 'ULIP' ELSE upper(trim(a_itd.lob)) END AS lob, CASE WHEN a_itd.benefit_name is NULL THEN 'NA' WHEN upper(trim(a_itd.benefit_name)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.benefit_name)) END AS benefit_name, CASE WHEN a_itd.benefit_name_grp is NULL THEN 'NA' WHEN upper(trim(a_itd.benefit_name_grp)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.benefit_name_grp)) END AS benefit_name_grp, a_itd.mednonmed as mednonmed, CASE WHEN a_itd.marital_status is NULL THEN 'NA' WHEN upper(trim(a_itd.marital_status)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.marital_status)) END AS marital_status, a_itd.ppt_band as ppt_band, a_itd.product_type_1 as product_type_1, a_itd.premium_band as premium_band, a_itd.premium_mode as premium_mode, CASE WHEN a_itd.sector is NULL THEN 'NA' WHEN upper(trim(a_itd.sector)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sector)) END AS sector, a_itd.smoker_code  as smoker_code, a_itd.product_type as product_type, a_itd.insrd_marital_status as insrd_marital_status, CASE WHEN a_itd.occupation_code_grp is NULL THEN 'NA' WHEN upper(trim(a_itd.occupation_code_grp)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.occupation_code_grp)) END AS occupation_code_grp, CASE WHEN a_itd.education is NULL THEN 'NA' WHEN upper(trim(a_itd.education)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.education)) END AS education, a_itd.pgo as pgo, a_itd.channel_mortality as channel_mortality, a_itd.death_benefit_type as death_benefit_type, a_itd.death_ind as death_ind, a_itd.insrd_eductn_dtls as insrd_eductn_dtls, a_itd.med_nonmed as med_nonmed, a_itd.state as state, a_itd.pin_code as pin_code, a_itd.district as district, a_itd.branch as branch, CASE WHEN a_itd.sa_retail is NULL THEN 'NA' WHEN upper(trim(a_itd.sa_retail)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sa_retail)) END AS sa_retail, CASE WHEN a_itd.sa_protection is NULL THEN 'NA' WHEN upper(trim(a_itd.sa_protection)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sa_protection)) END AS sa_protection, CASE WHEN a_itd.ayfp_retail is NULL THEN 'NA' WHEN upper(trim(a_itd.ayfp_retail)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.ayfp_retail)) END AS ayfp_retail, CASE WHEN a_itd.ayfp_protection is NULL THEN 'NA' WHEN upper(trim(a_itd.ayfp_protection)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.ayfp_protection)) END AS ayfp_protection, a_itd.uw_level as uw_level, CASE WHEN a_itd.cibil_bucket is NULL THEN 'NA' WHEN upper(trim(a_itd.cibil_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN '10_NOT_AVAILABLE' ELSE upper(trim(a_itd.cibil_bucket)) END AS cibil_bucket from policy_level_transformed plt LEFT JOIN (SELECT plcy_nmbr, max(upper(trim(pln_id))) as plan_id, max(trim(iss_yr)) as issue_year, max(trim(plcy_iss_dt)) as issue_date, max(upper(trim(dur))) as durations,  max(upper(trim(ag_bckt))) as age_bucket, max(upper(trim(bb_prmtr_nm))) as channel, max(upper(trim(bb_prmtr_dscrptn))) as sub_channel, max(upper(trim(bb_channl_group))) as channel_group, max(upper(trim(chnnl_zn_nm))) as channel_zone, max(chnnl_mrtlty_fnl_nm)  as channel_mortality_final, max(trim(cvd_indctr_flg))  as covid_ind, max(upper(trim(bnft_lf_assrd_gndr))) as benf_life_assd_gender, max(upper(trim(incm_bckt))) as income_bucket, max(upper(trim(lob_dscrptn))) as lob, max(upper(trim(plan_name))) as benefit_name, max(upper(trim(benefit_group))) as benefit_name_grp, max(upper(trim(md_nmd_cd))) as mednonmed, max(upper(trim(mrtl_stts_dscrptn))) as marital_status, max(ppt_bnd) as ppt_band, max(upper(trim(prdct_typ1_dscrptn))) as product_type_1 , max(prmm_bnd) as premium_band , max(prmm_md_cd)  as premium_mode, max(upper(trim(sctr_dscrptn))) as sector, max(upper(trim(smkr_cd)))  as smoker_code, max(upper(trim(prdct_typ_dscrptn)))  as product_type, max(upper(trim(insrt_mrtl_stts_dscrptn)))  as insrd_marital_status, max(upper(trim(occptn_cd_grp))) as occupation_code_grp, max(upper(trim(edctn_cd))) as education, max(upper(trim(pgo_cd)))  as pgo, max(upper(trim(chnnl_mrtlty_nm)))  as channel_mortality, max(upper(trim(dth_bnft_typ_cd))) as death_benefit_type, max(dth_indctr_cd) as death_ind, max(upper(trim(insrd_edct_dtls_cd))) as insrd_eductn_dtls, max(upper(trim(md_nmd_flg))) as med_nonmed, max(upper(trim(state))) as state, max(upper(trim(pin_code))) as pin_code, max(upper(trim(district)))  as district, max(upper(trim(branch_name)))  as branch, max(upper(trim(sa_rtl))) as sa_retail, max(upper(trim(sa_prtctn))) as sa_protection, max(upper(trim(ayfp_rtl))) as ayfp_retail, max(upper(trim(ayfp_prtctn))) as ayfp_protection, max(upper(trim(uw_level))) as uw_level, max(upper(trim(cibil_bucket))) as cibil_bucket from plcy_itd_fct_new_r group by plcy_nmbr) a_itd ON trim(plt.policy_number) = trim(a_itd.plcy_nmbr)","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "policy_level_transformed","ExecutionOrder":"42"},





{"JobId":"lkp_itddrilldown_ind","TargetTable":"itd_drilldown_ind_fct","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"SELECT distinct '202307' as mnth_id, lkp_dd.plcy_nmbr as policy_no, upper(trim(stg)) as stg, upper(trim(fl_ref_nmbr)) as fl_ref_nmbr, upper(trim(clm_typ)) as clm_typ, upper(trim(lf_insrd)) as lf_insrd, dth_dt as dth_dt, intmtn_go_dt, intmtn_ho_dt, cmplt_docs_clrfctn_rcvd_dt, upper(trim(wip_bckt)) as wip_bckt, CAST(clm_amt_bs_rdr as float) as clm_amt_bs_rdr, upper(trim(cs_mgr)) as cs_mgr, upper(trim(invst_bckt)) as invst_bckt, upper(trim(invs_rprt_recd_dt)) as invs_rprt_recd_dt, upper(trim(agng)) as agng, rpdtn_dt_sttlmnt_dt, cs_rvvl_dt, upper(trim(srvcng_agnt_nm)) as srvcng_agnt_nm, upper(trim(go)) as go, upper(trim(intmtn_to_sttlmnt)) as intmtn_to_sttlmnt, upper(trim(end_to_end_dod_to_sttlmnt)) as end_to_end_dod_to_sttlmnt, wrt_off_dt, dob, upper(trim(cs_of_dth)) as cs_of_dth, CASE WHEN ctgry_of_dth is NULL THEN 'NA' WHEN upper(trim(ctgry_of_dth)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ctgry_of_dth)) END AS ctgry_of_dth, upper(trim(prmm_md)) as prmm_md, upper(trim(prpsl_sgnd_dt)) as prpsl_sgnd_dt, plcy_iss_dt, effctv_dt, upper(trim(pr_nnpr_ulip_lvl_incrsng)) as pr_nnpr_ulip_lvl_incrsng, upper(trim(srvcng_agnt_id)) as srvcng_agnt_id, upper(trim(md_nn_md_prpsl_stg)) as md_nn_md_prpsl_stg, upper(trim(md_cntr)) as md_cntr, upper(trim(clmnt)) as clmnt, upper(trim(rltnshp)) as rltnshp, upper(trim(ntr_of_bs_plcy)) as ntr_of_bs_plcy, nn_adm_rvrsl_dt, dgnss_or_srgry_dt, upper(trim(erly_nn_erly)) as erly_nn_erly, upper(trim(rnsrd_amt)) as rnsrd_amt, upper(trim(gndr)) as gndr, upper(trim(dcsds_clnt_id)) as dcsds_clnt_id, upper(trim(nmbr_of_plcs)) as nmbr_of_plcs, upper(trim(age_at_dth)) as age_at_dth, upper(trim(plcy_drtn)) as plcy_drtn, upper(trim(typ_of_clm)) as typ_of_clm, upper(trim(ailmnt_dd)) as ailmnt_dd, upper(trim(stndr_cvrg)) as stndr_cvrg, upper(trim(rsn_fr_rpdtn)) as rsn_fr_rpdtn, upper(trim(intrst_amt)) as intrst_amt, upper(trim(bs_amt_accnt_val)) as bs_amt_accnt_val, upper(trim(pab_amt)) as pab_amt, upper(trim(trm_rdr)) as trm_rdr, upper(trim(pua_of_oppb)) as pua_of_oppb, upper(trim(pua_of_bns_acc_val)) as pua_of_bns_acc_val, upper(trim(prmm_rfnd)) as prmm_rfnd, upper(trim(dd_rdr)) as dd_rdr, upper(trim(sps_rdr)) as sps_rdr, upper(trim(wvr_of_prmm_pyr_rdr)) as wvr_of_prmm_pyr_rdr, upper(trim(fib_amt)) as fib_amt, upper(trim(crtcl_illnss_amt)) as crtcl_illnss_amt, upper(trim(actl_sm_assrd)) as actl_sm_assrd, upper(trim(ltgtn_cst_crt_fee)) as ltgtn_cst_crt_fee, upper(trim(unpd_prmm_srrndr_chrg)) as unpd_prmm_srrndr_chrg, upper(trim(chck_sa)) as chck_sa, upper(trim(rgn)) as rgn, CASE WHEN ctgry is NULL THEN 'NA' WHEN upper(trim(ctgry)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(ctgry)) END AS ctgry, upper(trim(rfnd_amt_if_any)) as rfnd_amt_if_any, upper(trim(systm_cs)) as systm_cs, upper(trim(systm_cs_dlt)) as systm_cs_dlt, upper(trim(chnnl1)) as chnnl1, upper(trim(chnnl2)) as chnnl2, upper(trim(zone)) as zone, upper(trim(srv_br_id)) as srv_br_id, pnl_int_dt, upper(trim(pnl_int_amt)) as pnl_int_amt, upper(trim(intrst_prcntg)) as intrst_prcntg, upper(trim(wr_agnt_id)) as wr_agnt_id, upper(trim(srvc_prms_int)) as srvc_prms_int, upper(trim(infrc_dt)) as infrc_dt, upper(trim(ertng_agnt_nm)) as ertng_agnt_nm, upper(trim(wrtng_go_cd)) as wrtng_go_cd, upper(trim(wrtng_go_nm)) as wrtng_go_nm, (CASE when upper(trim(wrtng_agnt_stt_nm)) IN ('0', '00:00:00', 'NA', 'NAN', 'WEBSITE DIRECT - BRANCH - INTERNET SALES') THEN 'NOT PROVIDED' WHEN wrtng_agnt_stt_nm is NULL THEN 'NOT PROVIDED' ELSE upper(trim(wrtng_agnt_stt_nm)) END) as wrtng_agnt_stt_nm, upper(trim(srvcng_brnch_nm)) as srvcng_brnch_nm, upper(trim(srvcng_agnt_stt_nm)) as srvcng_agnt_stt_nm, upper(trim(bs_pln_id)) as bs_pln_id, upper(trim(sttlmnt_yr)) as sttlmnt_yr, upper(trim(sttlmnt_mnth)) as sttlmnt_mnth, upper(trim(rrl_urbn_scl)) as rrl_urbn_scl, upper(trim(idtddrilldown_ind_id)) as idtddrilldown_ind_id, a_itd.plan_id, a_itd.issue_year as issue_year, a_itd.issue_date as issue_date, a_itd.durations as durations, CASE WHEN a_itd.age_bucket is NULL THEN 'NA' WHEN upper(trim(a_itd.age_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.age_bucket)) END AS age_bucket, CASE WHEN a_itd.channel is NULL THEN 'NA' WHEN upper(trim(a_itd.channel)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.channel)) END AS channel, CASE WHEN a_itd.sub_channel is NULL THEN 'NA' WHEN upper(trim(a_itd.sub_channel)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sub_channel)) END AS sub_channel, CASE WHEN a_itd.channel_group is NULL THEN 'NA' WHEN upper(trim(a_itd.channel_group)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.channel_group)) END AS channel_group, a_itd.channel_zone as channel_zone, a_itd.channel_mortality_final as channel_mortality_final, CASE WHEN a_itd.covid_ind is NULL THEN 'NA' WHEN upper(trim(a_itd.covid_ind)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.covid_ind)) END AS covid_ind, CASE WHEN a_itd.benf_life_assd_gender is NULL THEN 'NA' WHEN upper(trim(a_itd.benf_life_assd_gender)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.benf_life_assd_gender)) END AS benf_life_assd_gender, CASE WHEN a_itd.income_bucket is NULL THEN 'NA' WHEN upper(trim(a_itd.income_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '', 'NOT FOUND') THEN 'NA' ELSE upper(trim(a_itd.income_bucket)) END AS income_bucket, CASE WHEN a_itd.lob is NULL THEN 'NA' WHEN upper(trim(a_itd.lob)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' WHEN upper(trim(a_itd.lob)) ='UL' THEN 'ULIP' ELSE upper(trim(a_itd.lob)) END AS lob, CASE WHEN a_itd.benefit_name is NULL THEN 'NA' WHEN upper(trim(a_itd.benefit_name)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.benefit_name)) END AS benefit_name, CASE WHEN a_itd.benefit_name_grp is NULL THEN 'NA' WHEN upper(trim(a_itd.benefit_name_grp)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.benefit_name_grp)) END AS benefit_name_grp, a_itd.mednonmed as mednonmed, CASE WHEN a_itd.marital_status is NULL THEN 'NA' WHEN upper(trim(a_itd.marital_status)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.marital_status)) END AS marital_status, a_itd.ppt_band as ppt_band, a_itd.product_type_1 as product_type_1, a_itd.premium_band as premium_band, a_itd.premium_mode as premium_mode, CASE WHEN a_itd.sector is NULL THEN 'NA' WHEN upper(trim(a_itd.sector)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sector)) END AS sector, CASE WHEN a_itd.smoker_code is NULL THEN 'NA' WHEN upper(trim(a_itd.smoker_code)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.smoker_code)) END AS smoker_code, a_itd.product_type as product_type, a_itd.insrd_marital_status as insrd_marital_status, CASE WHEN a_itd.occupation_code_grp is NULL THEN 'NA' WHEN upper(trim(a_itd.occupation_code_grp)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.occupation_code_grp)) END AS occupation_code_grp, CASE WHEN a_itd.education is NULL THEN 'NA' WHEN upper(trim(a_itd.education)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.education)) END AS education, a_itd.pgo  as pgo, a_itd.channel_mortality as channel_mortality, a_itd.death_benefit_type as death_benefit_type, a_itd.death_ind as death_ind, a_itd.insrd_eductn_dtls as insrd_eductn_dtls, a_itd.med_nonmed as med_nonmed, a_itd.state as state, a_itd.pin_code as pin_code, a_itd.district as district, a_itd.branch as branch, CASE WHEN a_itd.sa_retail is NULL THEN 'NA' WHEN upper(trim(a_itd.sa_retail)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sa_retail)) END AS sa_retail, CASE WHEN a_itd.sa_protection is NULL THEN 'NA' WHEN upper(trim(a_itd.sa_protection)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.sa_protection)) END AS sa_protection, CASE WHEN a_itd.ayfp_retail is NULL THEN 'NA' WHEN upper(trim(a_itd.ayfp_retail)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.ayfp_retail)) END AS ayfp_retail, CASE WHEN a_itd.ayfp_protection is NULL THEN 'NA' WHEN upper(trim(a_itd.ayfp_protection)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN 'NA' ELSE upper(trim(a_itd.ayfp_protection)) END AS ayfp_protection, a_itd.uw_level as uw_level, CASE WHEN a_itd.cibil_bucket is NULL THEN 'NA' WHEN upper(trim(a_itd.cibil_bucket)) in ('NULL', 'N/A', 'NOT APPLICABLE', 'NOT PROVIDED', 'NOT AVAILABLE', 'UNANSWERED', '') THEN '10_NOT_AVAILABLE' ELSE upper(trim(a_itd.cibil_bucket)) END AS cibil_bucket from lkp_itddrilldown_ind lkp_dd LEFT JOIN (SELECT plcy_nmbr, max(upper(trim(pln_id))) as plan_id, max(trim(iss_yr)) as issue_year, max(trim(plcy_iss_dt)) as issue_date, max(upper(trim(dur))) as durations,  max(upper(trim(ag_bckt))) as age_bucket, max(upper(trim(bb_prmtr_nm))) as channel, max(upper(trim(bb_prmtr_dscrptn))) as sub_channel, max(upper(trim(bb_channl_group))) as channel_group, max(upper(trim(chnnl_zn_nm))) as channel_zone, max(chnnl_mrtlty_fnl_nm)  as channel_mortality_final, max(trim(cvd_indctr_flg))  as covid_ind, max(upper(trim(bnft_lf_assrd_gndr))) as benf_life_assd_gender, max(upper(trim(incm_bckt))) as income_bucket, max(upper(trim(lob_dscrptn))) as lob, max(upper(trim(plan_name))) as benefit_name, max(upper(trim(benefit_group))) as benefit_name_grp, max(upper(trim(md_nmd_cd))) as mednonmed, max(upper(trim(mrtl_stts_dscrptn))) as marital_status, max(ppt_bnd) as ppt_band, max(upper(trim(prdct_typ1_dscrptn))) as product_type_1 , max(prmm_bnd) as premium_band , max(prmm_md_cd)  as premium_mode, max(upper(trim(sctr_dscrptn))) as sector, max(upper(trim(smkr_cd)))  as smoker_code, max(upper(trim(prdct_typ_dscrptn)))  as product_type, max(upper(trim(insrt_mrtl_stts_dscrptn)))  as insrd_marital_status, max(upper(trim(occptn_cd_grp))) as occupation_code_grp, max(upper(trim(edctn_cd))) as education, max(upper(trim(pgo_cd)))  as pgo, max(upper(trim(chnnl_mrtlty_nm)))  as channel_mortality, max(upper(trim(dth_bnft_typ_cd))) as death_benefit_type, max(dth_indctr_cd) as death_ind, max(upper(trim(insrd_edct_dtls_cd))) as insrd_eductn_dtls, max(upper(trim(md_nmd_flg))) as med_nonmed, max(upper(trim(state))) as state, max(upper(trim(pin_code))) as pin_code, max(upper(trim(district)))  as district, max(upper(trim(branch_name)))  as branch, max(upper(trim(sa_rtl))) as sa_retail, max(upper(trim(sa_prtctn))) as sa_protection, max(upper(trim(ayfp_rtl))) as ayfp_retail, max(upper(trim(ayfp_prtctn))) as ayfp_protection, max(upper(trim(uw_level))) as uw_level, max(upper(trim(cibil_bucket))) as cibil_bucket from plcy_itd_fct_new_r group by plcy_nmbr) a_itd ON trim(lkp_dd.plcy_nmbr) = trim(a_itd.plcy_nmbr)","Order":"1","Pk": "plcy_nmbr", "Sk": "id","Target": "rds","Source": "lkp_itddrilldown_ind","ExecutionOrder":"43"},




{"JobId":"mortality_gcl","TargetTable":"mortality_gcl","Write":"N","BaseTable":"Y","View":"FinalView","Sql":"select * from mortality_gcl","Order":"1","Pk": "", "Sk": "id","Target": "rds","Source": "mortality_gcl","ExecutionOrder":"46"},

{"JobId":"gcl_ytd","TargetTable":"gcl_ytd_fct","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, trim(g_ytd.policy_no) as policy_nmbr, trim(issue_year) as issue_year, (pol_iss_date) as issue_date, upper(trim(dur)) as durations, upper(trim(AG_BKT.prmtr_nm)) as age_bucket, upper(trim(chnnl)) as chnnl, upper(trim(sa_retail)) as sa_retail, upper(trim(sa_protection)) as sa_protection, upper(trim(ayfp_retail)) as ayfp_retail, upper(trim(ayfp_protection)) as ayfp_protection, e_amount, e_number, a_number, a_amount, CASE WHEN CAST(trim(death_ind_claims) as int) =1 THEN 1 ELSE 0 END as death_ind, CASE WHEN cst_prsl.cstmr_crdt_scr is NULL THEN '10_NOT AVAILABLE' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<500 THEN '01_CIBIL<500' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<550 THEN '02_500<=CIBIL<550' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<600 THEN '03_550<=CIBIL<600' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<650 THEN '04_600<=CIBIL<650' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<700 THEN '05_650<=CIBIL<700' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<750 THEN '06_700<=CIBIL<750' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<800 THEN '07_750<=CIBIL<800' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<850 THEN '08_800<=CIBIL<850' ELSE '09_CIBIL>=850' END AS cibil_bucket, plc_cvg.cvrg_smkr_cd as smoker_code, cstmr_cmmnctn.state as state, cstmr_cmmnctn.pin_code as pin_code, cstmr_cmmnctn.district as district, trim(plcy_stts) as plcy_stts, upper(trim(schm_nm)) as schm_nm, upper(trim(scheme_type)) as scheme_type, upper(trim(member_status)) as member_status, upper(trim(gndr)) as gender, trim(occp_clss_of_mbr) as occp_clss_of_mbr from gcl_ytd g_ytd LEFT JOIN (Select distinct plcy_nmbr, max(cstmr_id) as cstmr_id from plcy_cstmr as pc_1 where pc_1.plcy_cstmr_rel_cd = 'O' and PREV_UPDT_TS IN (SELECT max(PREV_UPDT_TS) from plcy_cstmr as pc_2 where trim(pc_1.plcy_nmbr) = (pc_2.plcy_nmbr) group by plcy_nmbr) group by plcy_nmbr) pl_cst ON trim(pl_cst.plcy_nmbr) = trim(g_ytd.policy_no) LEFT JOIN (Select distinct cstmr_nmbr as cstmr_id, max(trim(cstmr_crdt_scr)) as cstmr_crdt_scr, max(cstmr_assd_incm_dlphin) as cstmr_assd_incm_dlphin from cstmr_prsnl as cp_1 where src_prvs_updtd_tstmp IN (SELECT max(src_prvs_updtd_tstmp) from cstmr_prsnl as cp_2 where trim(cp_1.cstmr_nmbr) = trim(cp_2.cstmr_nmbr) group by cp_2.cstmr_nmbr) group by cstmr_nmbr) cst_prsl ON trim(cst_prsl.cstmr_id) = trim(pl_cst.cstmr_id) LEFT JOIN (select cstmr_nmbr, max(pin_code) as pin_code, max(state) as state, max(district) as district from cstmr_cmmnctn group by cstmr_nmbr)  cstmr_cmmnctn on  trim(cstmr_cmmnctn.cstmr_nmbr) = trim(pl_cst.cstmr_id) LEFT JOIN (Select distinct plcy_nmbr, max(cvrg_smkr_cd) as cvrg_smkr_cd from plcy_cvg group by plcy_nmbr) plc_cvg ON trim(plc_cvg.plcy_nmbr) = trim(g_ytd.policy_no) LEFT JOIN (SELECT distinct policy_no, max(policy_holder_name) as policy_holder_name, max(type_of_loan) as type_of_loan, max(mapping) as mapping, max(assumptions_mapping) asassumptions_mapping, max(assumptions_mapping_for_ppt) as assumptions_mapping_for_ppt from mortality_gcl group by policy_no) mg ON trim(mg.policy_no) = trim(g_ytd.policy_no) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_ag_bkt where rcrd_stts_flg = 'A' group by prmtr_id, prmtr_nm) AG_BKT ON upper(trim(AG_BKT.prmtr_nm)) = upper(trim(g_ytd.age_bucket))","Order":"1","Pk": "id", "Sk": "id","Target": "rds","Source": "gcl_ytd","ExecutionOrder":"47"},

{"JobId":"gcl_itd","TargetTable":"gcl_itd_fct","Write":"Y","BaseTable":"Y","View":"FinalView","Sql":"select '202307' as mnth_id, trim(g_itd.policy_no) as policy_nmbr, trim(issue_year) as issue_year, (pol_iss_date) as issue_date, upper(trim(dur)) as durations, upper(trim(AG_BKT.prmtr_nm)) as age_bucket, upper(trim(chnnl)) as chnnl, upper(trim(sa_retail)) as sa_retail, upper(trim(sa_protection)) as sa_protection, upper(trim(ayfp_retail)) as ayfp_retail, upper(trim(ayfp_protection)) as ayfp_protection, e_amount, e_number, a_number, a_amount, CASE WHEN CAST(trim(death_ind_claims) as int) =1 THEN 1 ELSE 0 END as death_ind, CASE WHEN cst_prsl.cstmr_crdt_scr is NULL THEN '10_NOT AVAILABLE' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<500 THEN '01_CIBIL<500' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<550 THEN '02_500<=CIBIL<550' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<600 THEN '03_550<=CIBIL<600' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<650 THEN '04_600<=CIBIL<650' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<700 THEN '05_650<=CIBIL<700' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<750 THEN '06_700<=CIBIL<750' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<800 THEN '07_750<=CIBIL<800' WHEN CAST(replace(cst_prsl.cstmr_crdt_scr, '-', '0') as int)<850 THEN '08_800<=CIBIL<850' ELSE '09_CIBIL>=850' END AS cibil_bucket, plc_cvg.cvrg_smkr_cd as smoker_code, cstmr_cmmnctn.state as state, cstmr_cmmnctn.pin_code as pin_code, cstmr_cmmnctn.district as district, trim(plcy_stts) as plcy_stts, upper(trim(schm_nm)) as schm_nm, upper(trim(scheme_type)) as scheme_type, upper(trim(member_status)) as member_status, upper(trim(gndr)) as gender, trim(occp_clss_of_mbr) as occp_clss_of_mbr from gcl_itd g_itd LEFT JOIN (Select distinct plcy_nmbr, max(cstmr_id) as cstmr_id from plcy_cstmr as pc_1 where pc_1.plcy_cstmr_rel_cd = 'O' and PREV_UPDT_TS IN (SELECT max(PREV_UPDT_TS) from plcy_cstmr as pc_2 where trim(pc_1.plcy_nmbr) = (pc_2.plcy_nmbr) group by plcy_nmbr) group by plcy_nmbr) pl_cst ON trim(pl_cst.plcy_nmbr) = trim(g_itd.policy_no) LEFT JOIN (Select distinct cstmr_nmbr as cstmr_id, max(trim(cstmr_crdt_scr)) as cstmr_crdt_scr, max(cstmr_assd_incm_dlphin) as cstmr_assd_incm_dlphin from cstmr_prsnl as cp_1 where src_prvs_updtd_tstmp IN (SELECT max(src_prvs_updtd_tstmp) from cstmr_prsnl as cp_2 where trim(cp_1.cstmr_nmbr) = trim(cp_2.cstmr_nmbr) group by cp_2.cstmr_nmbr) group by cstmr_nmbr) cst_prsl ON trim(cst_prsl.cstmr_id) = trim(pl_cst.cstmr_id) LEFT JOIN (select cstmr_nmbr, max(pin_code) as pin_code, max(state) as state, max(district) as district from cstmr_cmmnctn group by cstmr_nmbr)  cstmr_cmmnctn on  trim(cstmr_cmmnctn.cstmr_nmbr) = trim(pl_cst.cstmr_id) LEFT JOIN (Select distinct plcy_nmbr, max(cvrg_smkr_cd) as cvrg_smkr_cd from plcy_cvg group by plcy_nmbr) plc_cvg ON trim(plc_cvg.plcy_nmbr) = trim(g_itd.policy_no) LEFT JOIN (SELECT distinct policy_no, max(policy_holder_name) as policy_holder_name, max(type_of_loan) as type_of_loan, max(mapping) as mapping, max(assumptions_mapping) asassumptions_mapping, max(assumptions_mapping_for_ppt) as assumptions_mapping_for_ppt from mortality_gcl group by policy_no) mg ON trim(mg.policy_no) = trim(g_itd.policy_no) LEFT JOIN (Select distinct prmtr_id, prmtr_nm from dim_ag_bkt where rcrd_stts_flg = 'A' group by prmtr_id, prmtr_nm) AG_BKT ON upper(trim(AG_BKT.prmtr_nm)) = upper(trim(g_itd.age_bucket))","Order":"1","Pk": "id", "Sk": "id","Target": "rds","Source": "gcl_itd","ExecutionOrder":"48"}


]